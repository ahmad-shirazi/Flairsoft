version: '3.3'

services:
  postgres:
    restart: always
    build:
      context: ./docker_init
      dockerfile: postgres.Dockerfile
    command: postgres -c "max_connections=500"
    ports:
      - '5432:5432'
    volumes:
      - 'pgdata:/var/lib/postgresql/data/'
    environment:
      - POSTGRES_PASSWORD=flairsoft
      - POSTGRES_USER=flairsoft
    networks:
      geohai:
        aliases:
          - postgres.flairsoft.local

  minio:
    restart: always
    container_name: 'minio'
    image: 'bitnami/minio:latest'
    ports:
      - '8004:9000'
      - '8005:9001'
    volumes:
      - 'miniodata:/data'
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    networks:
      geohai:
        aliases:
          - minio.flairsoft.local

  gateway:
    restart: always
    image: flairsoft/ai
    environment:
      - NODE_ENV=DEVELOPMENT
    build:
      context: .
      args:
        - NODE_ENV=DEVELOPMENT
      dockerfile: ./src/Dockerfile
    ports:
      - "8001:3000"
    depends_on:
      - postgres
      - rabbitmq
    links:
      -         postgres
      - rabbitmq
    networks:
      geohai:
        aliases:
          - ai.flairsoft.local


#  migration:
#    restart: always
#    image: geohai/migration
#    environment:
#      - NODE_ENV=DEVELOPMENT
#    build:
#      context: .
#      dockerfile: ./migration/Dockerfile
#    deploy:
#      restart_policy:
#        condition: on-failure
#        max_attempts: 10
#    depends_on:
#      - postgres
#      - rabbitmq
#    links:
#      - postgres
#      - rabbitmq
#    networks:
#      flairsoft:
#        aliases:
#          - migration.geohai.local

volumes:
  pgdata:
  miniodata:

networks:
  flairsoft:
    driver: bridge
#    name: flairsoft.local
